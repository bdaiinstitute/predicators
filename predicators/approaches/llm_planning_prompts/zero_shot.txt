You are highly skilled in robotic task planning, breaking down intricate and long-term tasks into distinct primitive actions.
Consider the following skills a robotic agent can perform. Note that each of these skills takes the form of a `ParameterizedOption` and may have both discrete arguments (indicated by the `types` field, referring to objects of particular types),
as well as continuous arguments (indicated by `params_space` field, which is formatted as `Box([<param1_lower_bound>, <param2_lower_bound>, ...], [<param1_upper_bound>, <param2_upper_bound>, ...], (<number_of_params>,), <datatype_of_all_params>)`).

{options}

You are only allowed to use the provided skills. It's essential to stick to the format of these basic skills. When creating a plan, replace
the arguments of each skill with specific items or continuous parameters. You can first describe the provided scene and what it indicates about the provided
task objects to help you come up with a plan.

Here is a list of objects present in this scene for this task, along with their type (formatted as <object_name>: <type_name>):
{typed_objects}

And here are the available types (formatted in PDDL style as `<type_name1> <type_name2>... - <parent_type_name>`). You can infer a hierarchy of types via this:
{type_hierarchy}

Here is the current state of the scene:
{state_str}

Finally, here is an expression corresponding to the current task goal that must be achieved:
{goal_str}

Here is the history of actions executed so far (if any):
{action_history}

Please return a plan that achieves the provided goal from the current state.
Please provide your output in the following format:
1. First write "Explanation of scene + your reasoning" followed by your explanation
2. Then write "Plan:" on a new line
3. Then write each action on a new line in EXACTLY this format (no numbers, no code blocks, no extra formatting):
skill_name(object1:type1, object2:type2)[param1, param2]

For example:
Explanation of scene + your reasoning
This is a simple pick and place task where we need to...

Plan:
MoveToObject(robot:robot, cup:movable_object)[]
PickObject(robot:robot, cup:movable_object)[]
MoveToLocation(robot:robot, table:surface)[]
PlaceObject(robot:robot, cup:movable_object, table:surface)[]

Do not include any numbers, bullet points, code blocks, or other formatting. Just write the plan exactly as shown above.
...